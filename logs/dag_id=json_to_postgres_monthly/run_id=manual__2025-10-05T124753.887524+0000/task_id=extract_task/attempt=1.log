{"timestamp":"2025-10-05T12:47:59.773945Z","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager","filename":"manager.py","lineno":179}
{"timestamp":"2025-10-05T12:47:59.775091Z","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/json_to_postgres.py","logger":"airflow.models.dagbag.DagBag","filename":"dagbag.py","lineno":593}
{"timestamp":"2025-10-05T12:47:59.797926Z","level":"warning","event":"The `airflow.operators.python.PythonOperator` attribute is deprecated. Please use `'airflow.providers.standard.operators.python.PythonOperator'`.","category":"DeprecatedImportWarning","filename":"/opt/airflow/dags/json_to_postgres.py","lineno":6,"logger":"py.warnings"}
{"timestamp":"2025-10-05T12:47:59.821337Z","level":"info","event":"Task instance is in running state","logger":"task.stdout"}
{"timestamp":"2025-10-05T12:47:59.822705Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","logger":"task.stdout"}
{"timestamp":"2025-10-05T12:47:59.823681Z","level":"info","event":"Current task name:extract_task","logger":"task.stdout"}
{"timestamp":"2025-10-05T12:47:59.825194Z","level":"info","event":"Dag name:json_to_postgres_monthly","logger":"task.stdout"}
{"timestamp":"2025-10-05T12:47:59.915776Z","level":"info","event":"Loaded 8 JSON files into raw_json_data table","logger":"task.stdout"}
{"timestamp":"2025-10-05T12:47:59.916156Z","level":"info","event":"Done. Returned value was: None","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator","filename":"python.py","lineno":218}
{"timestamp":"2025-10-05T12:47:59.931948Z","level":"info","event":"Task instance in success state","logger":"task.stdout"}
{"timestamp":"2025-10-05T12:47:59.932745Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.RUNNING","logger":"task.stdout"}
{"timestamp":"2025-10-05T12:47:59.933619Z","level":"info","event":"Task operator:<Task(PythonOperator): extract_task>","logger":"task.stdout"}
